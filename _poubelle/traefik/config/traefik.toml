# /apps/traefik/traefik.toml
[api]
  dashboard = true
  insecure = true

[entryPoints]
  [entryPoints.web]
    # Listen on port 80 for incoming requests
    address = ":80"
##    [entryPoints.web.http]
##     [entryPoints.web.http.redirections]
  ##      [entryPoints.web.http.redirections.entryPoint]
  ##      to = "websecure"
  ##        scheme = "https"
##        permanent = true

  ##  [entryPoints.websecure]
##    address = ":443"
  ##      [entryPoints.websecure.http.tls]
##        certResolver = "default"

[providers]
  [providers.docker]
    watch = true
    exposedByDefault = false
    network = "portainer_networks"

  # http routing section
  [http]
    [http.routers]
      # Define a connection between requests and services
      [http.routers.to-whoami]
      rule = "Host(`whoami`) && PathPrefix(`/whoami/`)"
      # If the rule matches, applies the middleware
      middlewares = ["test-user"]
      # If the rule matches, forward to the whoami service (declared below)
      service = "whoami"

    [http.middlewares]
      # Define an authentication mechanism
      [http.middlewares.test-user.basicAuth]
        users = ["test:$apr1$H6uskkkW$IgXLP6ewTrSuBkTrqE8wj/"]

    [http.services]
      # Define how to reach an existing service on our infrastructure
      [http.services.whoami.loadBalancer]
        [[http.services.whoami.loadBalancer.servers]]
          url = "http://private/whoami-service"

##[certificatesResolvers]
##  [certificatesResolvers.default]
      ##    [certificatesResolvers.default.acme]
      ##email = "idoctrine@gmail.com"
      ##storage = "acme.json"
##caServer = "https://acme-v01.api.letsencrypt.org/directory"
##    [certificatesResolvers.default.acme.tlsChallenge]
